<?php

/**
 * @file
 * Install, update and uninstall functions for the social_course_advanced
 * module.
 */

use Drupal\Core\Config\FileStorage;

/**
 * Add the field_flexible_group_visibility field to the course_advanced group.
 */
function social_course_advanced_update_8001() {
  $config_names = [
    'field.field.group.course_advanced.field_flexible_group_visibility',
    'field.field.group.course_advanced.field_group_allowed_visibility'
  ];

  foreach ($config_names as $config_name) {
    $config_path = drupal_get_path('module', 'social_course_advanced') . '/config/install';
    $source = new FileStorage($config_path);
    $config_storage = \Drupal::service('config.storage');
    $config_storage->write($config_name, $source->read($config_name));
  }
}

/**
 * Set field_flexible_group_visibility as public by default.
 */
function social_course_advanced_update_8002() {
  $group_storage = \Drupal::entityTypeManager()->getStorage('group');
  $course_ids = $group_storage
    ->getQuery()
    ->condition('type', 'course_advanced')
    ->execute();

  foreach ($course_ids as $course_id) {
    /** @var \Drupal\group\Entity\GroupInterface $course */
    $course = $group_storage->load($course_id);
    if ($course->hasField('field_flexible_group_visibility')) {
      $course->set('field_flexible_group_visibility', ['public']);
      $course->save();
    }
  }
}

/**
 * Set field_group_allowed_visibility as community by default.
 */
function social_course_advanced_update_8003() {
  $group_storage = \Drupal::entityTypeManager()->getStorage('group');
  $course_ids = $group_storage
    ->getQuery()
    ->condition('type', 'course_advanced')
    ->execute();

  foreach ($course_ids as $course_id) {
    /** @var \Drupal\group\Entity\GroupInterface $course */
    $course = $group_storage->load($course_id);
    if ($course->hasField('field_group_allowed_visibility')) {
      $course->set('field_group_allowed_visibility', ['community']);
      $course->save();
    }
  }
}
